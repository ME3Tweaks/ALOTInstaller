# Build all three versions of ALOT Installer
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- ALOT-v4

pool:
  vmImage: 'windows-latest'

variables:
  solution: '*.sln'
  buildPlatform: 'x64'

steps:
- checkout: self
  submodules: true 
 
# Change artifact name when the version major/minor changes
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $xml = [xml](Get-Content .\SharedAssemblyInfo.proj)
      $verstr= $xml.Project.PropertyGroup.Version
      $ver = New-Object System.Version($verstr)
      $ver = New-Object System.Version($ver.Major, $ver.Minor, $ver.Build, [int]$(Build.BuildId))
      $xml.Project.PropertyGroup.Version = $ver.ToString()
      $xml.Project.PropertyGroup.AssemblyVersion = $ver.ToString()
      $xml.Project.PropertyGroup.FileVersion = $ver.ToString()
      $xml.Save("SharedAssemblyInfo.proj")
      Write-Host "Version: $($ver)"
      echo "##vso[task.setvariable variable=VER]$($ver)"


- task: NuGetToolInstaller@1

#- task: NuGetCommand@2
#  inputs:
#    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'ALOTInstallerWPF/ALOTInstallerWPF.csproj'
    arguments: '-c WPFRelease --output "Output/Windows" --runtime win-x64 /p:PublishSingleFile=true /p:PublishReadyToRun=true -v normal'
    zipAfterPublish: false

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Get-ChildItem -Path MahApps.Metro/src/Mahapps.Metro -Recurse

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'Output/Windows/ALOTInstallerWPF'
    includeRootFolder: false
    archiveType: '7z'
    archiveFile: '$(Build.ArtifactStagingDirectory)/ALOTInstallerWPF_$(VER).7z'
    replaceExistingArchive: true

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'ALOTInstallerConsole/ALOTInstallerConsole.csproj'
    arguments: '-c LinuxRelease --output "Output/Linux" --runtime linux-x64 /p:PublishTrimmed=true /p:PublishSingleFile=true'
    zipAfterPublish: false

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'Output/Linux/ALOTInstallerConsole'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/ALOTInstallerConsole_Linux_$(VER).zip'
    replaceExistingArchive: true

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'ALOTInstallerConsole/ALOTInstallerConsole.csproj'
    arguments: '-c WinRelease --output "Output/Windows" --runtime win-x64 /p:PublishTrimmed=true /p:PublishSingleFile=true'
    zipAfterPublish: false

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'Output/Windows/ALOTInstallerConsole'
    includeRootFolder: false
    archiveType: '7z'
    archiveFile: '$(Build.ArtifactStagingDirectory)/ALOTInstallerConsole_Win_$(VER).7z'
    replaceExistingArchive: true


- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '$(VER) Builds'
    publishLocation: 'Container'
    
#- task: VSTest@2
#  inputs:
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'
